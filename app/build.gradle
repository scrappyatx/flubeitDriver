buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
/*
 * Copyright (c) 2017. scrapdoodle, LLC.  All Rights Reserved
 */

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'


repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
    maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url 'https://jitpack.io' }
}

android {
    signingConfigs {
        ///
        /// The SHA1 is used to tie the build variant to the firebase project
        developmentEnvironment {
            keyAlias 'development'
            keyPassword 'development#220'
            storeFile file('C:/Users/Bryan/Google Drive/Personal/android development/keystore/flubeitdriver.jks')
            storePassword 'oilchange#220'
        }
        demoEnvironment {
            keyAlias 'demo'
            keyPassword 'demo#220'
            storeFile file('C:/Users/Bryan/Google Drive/Personal/android development/keystore/flubeitdriver.jks')
            storePassword 'oilchange#220'

        }
        stagingEnvironment {
            keyAlias 'staging'
            keyPassword 'staging#220'
            storeFile file('C:/Users/Bryan/Google Drive/Personal/android development/keystore/flubeitdriver.jks')
            storePassword 'oilchange#220'

        }
        productionEnvironment {
            keyAlias 'production'
            keyPassword 'production#220'
            storeFile file('C:/Users/Bryan/Google Drive/Personal/android development/keystore/flubeitdriver.jks')
            storePassword 'oilchange#220'
        }
    }
    dexOptions {
        preDexLibraries = true
    }
    lintOptions {
        disable 'BinaryOperationInTimber'
        disable 'TimberTagLength'
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "it.flube.driver"
        minSdkVersion 18
        targetSdkVersion 28
        multiDexEnabled true
        versionCode buildVersionCode()
        versionName version
        archivesBaseName = "flubeit_driver"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resConfigs "en"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }

    flavorDimensions "targetEnvironment"
    productFlavors {
        production {
            dimension "targetEnvironment"
            //manifestPlaceholders = [appIcon: "@drawable/app_logo_round"]
        }

        demo {
            dimension "targetEnvironment"
            applicationIdSuffix ".demo"
            //manifestPlaceholders = [appIcon: "@drawable/app_logo_round_demo"]
        }

        staging {
            dimension "targetEnvironment"
            applicationIdSuffix ".staging"
            //manifestPlaceholders = [appIcon: "@drawable/app_logo_round_staging"]
        }

        develop {
            dimension "targetEnvironment"
            applicationIdSuffix ".develop"
            //manifestPlaceholders = [appIcon: "@drawable/app_logo_round_development"]
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.release
            /// RELEASE variants will use a signingConfig that corresponds to their target firebase environment (for the SHA1)
            productFlavors.production.signingConfig signingConfigs.productionEnvironment
            productFlavors.demo.signingConfig signingConfigs.demoEnvironment
            productFlavors.staging.signingConfig signingConfigs.stagingEnvironment
            productFlavors.develop.signingConfig signingConfigs.developmentEnvironment

            debuggable false
        }

        debug {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".debug"
            debuggable true
        }
    }

    applicationVariants.all {
        variant -> def mergedFlavor = variant.getMergedFlavor();

        /// RELEASE variants will use a signingConfig that corresponds to their target firebase environment (for the SHA1)
        if (variant.buildType.name.equals("release") && variant.flavorName.equals("production")) {
                mergedFlavor.manifestPlaceholders = [appLabel: "@string/app_name_prod", appIconSquare: "@drawable/app_logo_v2_prod_release_square", appIconRound: "@drawable/app_logo_v2_prod_release_circle"]}
        if (variant.buildType.name.equals("release") && variant.flavorName.equals("demo")) {
                mergedFlavor.manifestPlaceholders = [appLabel: "@string/app_name_demo", appIconSquare: "@drawable/app_logo_v2_demo_release_square", appIconRound: "@drawable/app_logo_v2_demo_release_circle"]}
        if (variant.buildType.name.equals("release") && variant.flavorName.equals("staging")) {
                mergedFlavor.manifestPlaceholders = [appLabel: "@string/app_name_staging", appIconSquare: "@drawable/app_logo_v2_staging_release_square", appIconRound: "@drawable/app_logo_v2_staging_release_circle"]}
        if (variant.buildType.name.equals("release") && variant.flavorName.equals("develop")) {
                mergedFlavor.manifestPlaceholders = [appLabel: "@string/app_name_dev", appIconSquare: "@drawable/app_logo_v2_dev_release_square", appIconRound: "@drawable/app_logo_v2_dev_release_circle"]}


        /// DEBUG variants will use default android studio debug certificate
        if (variant.buildType.name.equals("debug") && variant.flavorName.equals("production")) {
                mergedFlavor.manifestPlaceholders = [appLabel: "@string/app_name_prod_debug", appIconSquare: "@drawable/app_logo_v2_prod_debug_square", appIconRound: "@drawable/app_logo_v2_prod_debug_circle"]}
        if (variant.buildType.name.equals("debug") && variant.flavorName.equals("demo")) {
                mergedFlavor.manifestPlaceholders = [appLabel: "@string/app_name_demo_debug", appIconSquare: "@drawable/app_logo_v2_demo_debug_square", appIconRound: "@drawable/app_logo_v2_demo_debug_circle"]}
        if (variant.buildType.name.equals("debug") && variant.flavorName.equals("staging")) {
                mergedFlavor.manifestPlaceholders = [appLabel: "@string/app_name_staging_debug", appIconSquare: "@drawable/app_logo_v2_staging_debug_square", appIconRound: "@drawable/app_logo_v2_staging_debug_circle"]}
        if (variant.buildType.name.equals("debug") && variant.flavorName.equals("develop")) {
                mergedFlavor.manifestPlaceholders = [appLabel: "@string/app_name_dev_debug", appIconSquare: "@drawable/app_logo_v2_dev_debug_square", appIconRound: "@drawable/app_logo_v2_dev_debug_circle"]}
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = new File(outputFileName.replace(".apk", "-${variant.versionName}.apk"))
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/androidx.exifinterface_exifinterface.version'
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
}

def supportVersion = '28.0.0'

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //annotationProcessor "android.arch.lifecycle:compiler:1.0.0-alpha9-1"

    //annotationProcessor "android.arch.lifecycle:compiler:1.1.0"
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation('com.android.support.test:runner:0.5', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Set this dependency to use JUnit 4 rules
    androidTestImplementation('com.android.support.test:rules:0.5', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Set this dependency to build and run Espresso tests
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Set this dependency to build and run UI Automator tests
    androidTestImplementation('com.android.support.test.uiautomator:uiautomator-v18:2.1.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation("com.android.support:support-annotations:$supportVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //implementation 'android.arch.lifecycle:compiler:1.1.0'
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:cardview-v7:$supportVersion"
    implementation "com.android.support:customtabs:$supportVersion"
    implementation "com.android.support:recyclerview-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support:support-compat:$supportVersion"
    implementation "com.android.support:support-media-compat:$supportVersion"

    //implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.android.support:animated-vector-drawable:$supportVersion"
    implementation "com.android.support:exifinterface:$supportVersion"
    implementation "com.android.support:support-v4:28.0.0"

    // google credentials for saved signin
    implementation 'com.google.android.gms:play-services-auth:16.0.1'

    // was using firebase 10.2.6
    implementation 'com.firebaseui:firebase-ui-auth:4.2.0'
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.google.firebase:firebase-config:16.4.0'
    implementation 'com.google.firebase:firebase-auth:16.2.0'
    implementation 'com.google.firebase:firebase-database:16.1.0'
    implementation 'com.google.firebase:firebase-storage:16.1.0'
    implementation 'com.google.firebase:firebase-firestore:18.1.0'
    implementation 'com.google.firebase:firebase-messaging:17.4.0'
    implementation 'com.google.firebase:firebase-ml-vision:19.0.2'
    implementation 'com.google.firebase:firebase-ml-vision-image-label-model:17.0.2'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.maps.android:android-maps-utils:0.5+'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.joanzapata.iconify:android-iconify-fontawesome:2.2.2'

    // (v4.5)
    implementation 'com.mikepenz:fontawesome-typeface:4.7.0.1@aar'
    implementation('com.mikepenz:materialdrawer:5.9.5@aar') {
        transitive = true
    }
    implementation 'com.rollbar:rollbar-android:0.2.1'
    //implementation 'io.ably:ably-android:1.0.0'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'com.squareup.picasso:picasso:2.71828'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    implementation 'com.airbnb.android:lottie:2.7.0'
    implementation 'com.tapadoo.android:alerter:3.0.0'
    implementation 'com.instabug.library:instabug:4.3.3'
    implementation 'com.wonderkiln:camerakit:0.13.1'
    implementation 'io.fotoapparat.fotoapparat:library:2.3.1'
    implementation 'com.github.gcacace:signature-pad:1.2.1'
    implementation 'com.karumi:dexter:5.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.github.faranjit:currency-edittext:1.0.1'

    //implementation('com.mapbox.mapboxsdk:mapbox-android-sdk:5.1.1@aar') {

    //    transitive = true

    //}

    // Mapbox dependencies

    //implementation 'com.google.maps.android:android-maps-utils:0.5+'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    //implementation 'com.mapzen.android:lost:3.0.4'

    //implementation('com.mapbox.mapboxsdk:mapbox-android-sdk:5.2.1@aar') {

    //    transitive = true

    //}

    //implementation 'com.mapbox.mapboxsdk:mapbox-android-sdk:6.0.1'
    implementation 'com.mapbox.mapboxsdk:mapbox-android-sdk:7.0.0'
    //implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-annotation-v7:0.4.0'

    //implementation 'com.mapbox.mapboxsdk:mapbox-android-sdk:5.3.1'

    //implementation('com.mapbox.mapboxsdk:mapbox-android-navigation-ui:0.11.0') {

    //    transitive = true

    //}

    //implementation 'com.mapbox.mapboxsdk:mapbox-android-navigation:0.11.0'

    ///// implementation 'com.mapbox.mapboxsdk:mapbox-android-services:2.2.10'

    // Mapbox plugins

    //implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-locationlayer:0.1.0'

    //implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-building:0.1.0'

    //implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-traffic:0.3.0'

    //implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-geojson:0.1.0'

    // Mapbox Android UI

    //implementation 'com.mapbox.mapboxsdk:mapbox-android-ui:2.2.6'

    //implementation 'com.twilio:voice-android:2.0.1'

    implementation 'com.facebook.device.yearclass:yearclass:2.0.0'
    implementation 'com.jakewharton.timber:timber:4.6.1'
    implementation 'com.jakewharton:butterknife:8.7.0'
    implementation 'com.inrista.loggliest:loggliest:0.2'
    implementation 'com.github.halysongoncalves:pugnotification:1.8.1'
    implementation 'com.github.MAXDeliveryNG:slideview:1.0.2'
    implementation 'com.ebanx:swipe-button:0.8.3'
    implementation 'com.jaredrummler:android-device-names:1.1.6'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.7.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.json:json:20140107'
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }
    implementation project(':libBatchData')
    apply plugin: 'com.google.gms.google-services'
    implementation 'com.crashlytics.sdk.android:answers:1.4.7'
}




